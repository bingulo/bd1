-- MySQL Script generated by MySQL Workbench
-- Wed 06 Jul 2022 10:18:55 AM -03
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering


-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Table Funcionario
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS Funcionario (
  id INTEGER NOT NULL,
  Nome VARCHAR(100) NULL,
  Email VARCHAR(100) NULL,
  Senha VARCHAR(10) NULL,
  Turno VARCHAR(10) NULL,
  Telefone INTEGER NULL,
  Tipo VARCHAR(45) NULL,
  PRIMARY KEY (id));

-- -----------------------------------------------------
-- Table Func_Atendente
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS Func_Atendente (
  Salario INTEGER NULL,
  Funcionario_id INTEGER NOT NULL,
  PRIMARY KEY (Funcionario_id),
  CONSTRAINT fk_Func_Atendente_Funcionario
    FOREIGN KEY (Funcionario_id)
    REFERENCES Funcionario (id)
    
    )
;


-- -----------------------------------------------------
-- Table Paciente
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS Paciente (
  id INTEGER NOT NULL,
  Nome VARCHAR(100) NULL,
  Numero_saude INTEGER NULL,
  CPF INTEGER NULL,
  Dta_nasc DATE NULL,
  RG INTEGER NULL,
  Sexo VARCHAR(5) NULL,
  Nome_mae VARCHAR(100) NULL,
  CEP INTEGER NULL,
  Logradouro VARCHAR(100) NULL,
  Cidade VARCHAR(50) NULL,
  Estado VARCHAR(45) NULL,
  Complemento VARCHAR(100) NULL,
  Telefone INTEGER NULL,
  Func_Atendente_Funcionario_id INTEGER NOT NULL,
  PRIMARY KEY (id, Func_Atendente_Funcionario_id),
  CONSTRAINT fk_Paciente_Func_Atendente1
    FOREIGN KEY (Func_Atendente_Funcionario_id)
    REFERENCES Func_Atendente (Funcionario_id)
    
    )
;

CREATE INDEX fk_Paciente_Func_Atendente1_idx ON Paciente (Func_Atendente_Funcionario_id ASC) ;


-- -----------------------------------------------------
-- Table Exame
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS Exame (
  id INTEGER NOT NULL,
  Tipo VARCHAR(45) NULL,
  Data DATE NULL,
  PRIMARY KEY (id))
;


-- -----------------------------------------------------
-- Table Sala
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS Sala (
  num INTEGER NOT NULL)
;


-- -----------------------------------------------------
-- Table Atendimento
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS Atendimento (
  Seq INTEGER NOT NULL,
  Urgencia VARCHAR(50) NULL,
  Hra_inicio TIME NULL,
  Data DATE NULL,
  Tipo VARCHAR(50) NULL,
  Paciente_id INTEGER NOT NULL,
  Sala_num INTEGER NOT NULL,
  PRIMARY KEY (Seq, Paciente_id),
  CONSTRAINT fk_Atendimento_Paciente1
    FOREIGN KEY (Paciente_id)
    REFERENCES Paciente (id)
    
    ,
  CONSTRAINT fk_Atendimento_Sala1
    FOREIGN KEY (Sala_num)
    REFERENCES Sala (num)
    
    )
;

CREATE INDEX fk_Atendimento_Paciente1_idx ON Atendimento (Paciente_id ASC) ;

CREATE INDEX fk_Atendimento_Sala1_idx ON Atendimento (Sala_num ASC) ;


-- -----------------------------------------------------
-- Table Diagnostico
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS Diagnostico (
  Cid INTEGER NOT NULL,
  Descricao VARCHAR(45) NULL,
  Atendimento_Seq INTEGER NOT NULL,
  Atendimento_Paciente_id INTEGER NOT NULL,
  PRIMARY KEY (Cid, Atendimento_Seq, Atendimento_Paciente_id),
  CONSTRAINT fk_Diagnostico_Atendimento1
    FOREIGN KEY (Atendimento_Seq , Atendimento_Paciente_id)
    REFERENCES Atendimento (Seq , Paciente_id)
    
    )
;

CREATE INDEX fk_Diagnostico_Atendimento1_idx ON Diagnostico (Atendimento_Seq ASC, Atendimento_Paciente_id ASC) ;


-- -----------------------------------------------------
-- Table Atendimento_Urgencia
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS Atendimento_Urgencia (
  Enfermidade VARCHAR(100) NULL,
  Assistencia VARCHAR(100) NULL,
  Atendimento_Seq INTEGER NOT NULL,
  Atendimento_Paciente_id INTEGER NOT NULL,
  PRIMARY KEY (Atendimento_Seq, Atendimento_Paciente_id),
  CONSTRAINT fk_Atendimento_Urgencia_Atendimento1
    FOREIGN KEY (Atendimento_Seq , Atendimento_Paciente_id)
    REFERENCES Atendimento (Seq , Paciente_id)
    
    )
;


-- -----------------------------------------------------
-- Table Atendimento_Emergencia
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS Atendimento_Emergencia (
  Tratamento VARCHAR(100) NULL,
  Enfermidade VARCHAR(100) NULL,
  Atendimento_Seq INTEGER NOT NULL,
  Atendimento_Paciente_id INTEGER NOT NULL,
  PRIMARY KEY (Atendimento_Seq, Atendimento_Paciente_id),
  CONSTRAINT fk_Atendimento_Emergencia_Atendimento1
    FOREIGN KEY (Atendimento_Seq , Atendimento_Paciente_id)
    REFERENCES Atendimento (Seq , Paciente_id)
    
    )
;


-- -----------------------------------------------------
-- Table Receita
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS Receita (
  Seq_rec INTEGER NOT NULL,
  Data DATE NULL,
  Paciente_id INTEGER NOT NULL,
  PRIMARY KEY (Seq_rec, Paciente_id),
  CONSTRAINT fk_Receita_Paciente1
    FOREIGN KEY (Paciente_id)
    REFERENCES Paciente (id)
    
    )
;

CREATE INDEX fk_Receita_Paciente1_idx ON Receita (Paciente_id ASC) ;


-- -----------------------------------------------------
-- Table Internacao
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS Internacao (
  Seq INTEGER NOT NULL,
  Leito VARCHAR(20) NULL,
  Duracao TIMESTAMP NULL,
  Paciente_id INTEGER NOT NULL,
  Paciente_Func_Atendente_Funcionario_id INTEGER NOT NULL,
  PRIMARY KEY (Seq),
  CONSTRAINT fk_Internacao_Paciente1
    FOREIGN KEY (Paciente_id , Paciente_Func_Atendente_Funcionario_id)
    REFERENCES Paciente (id , Func_Atendente_Funcionario_id)
    
    )
;

CREATE INDEX fk_Internacao_Paciente1_idx ON Internacao (Paciente_id ASC, Paciente_Func_Atendente_Funcionario_id ASC) ;


-- -----------------------------------------------------
-- Table Func_Estoquista
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS Func_Estoquista (
  Setor VARCHAR(30) NULL,
  Funcionario_id INTEGER NOT NULL,
  PRIMARY KEY (Funcionario_id),
  CONSTRAINT fk_Func_Estoquista_Funcionario1
    FOREIGN KEY (Funcionario_id)
    REFERENCES Funcionario (id)
    
    )
;


-- -----------------------------------------------------
-- Table Func_Prof_Saude
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS Func_Prof_Saude (
  Num_reg INTEGER NULL,
  Funcionario_id INTEGER NOT NULL,
  PRIMARY KEY (Funcionario_id),
  CONSTRAINT fk_Func_Prof_Saude_Funcionario1
    FOREIGN KEY (Funcionario_id)
    REFERENCES Funcionario (id)
    
    )
;


-- -----------------------------------------------------
-- Table Func_Prof_Saude_Farmaceutico
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS Func_Prof_Saude_Farmaceutico (
  CRF INTEGER NULL,
  Especialidade VARCHAR(45) NULL,
  Func_Prof_Saude_Funcionario_id INTEGER NOT NULL,
  PRIMARY KEY (Func_Prof_Saude_Funcionario_id),
  CONSTRAINT fk_Func_Prof_Saude_Farmaceutico_Func_Prof_Saude1
    FOREIGN KEY (Func_Prof_Saude_Funcionario_id)
    REFERENCES Func_Prof_Saude (Funcionario_id)
    
    )
;


-- -----------------------------------------------------
-- Table Material
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS Material (
  Cod INTEGER NOT NULL,
  Nome VARCHAR(100) NULL,
  Qtd INTEGER NULL,
  Tipo VARCHAR(45) NULL,
  PRIMARY KEY (Cod))
;


-- -----------------------------------------------------
-- Table Material_Medicamento
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS Material_Medicamento (
  Instrucoes VARCHAR(100) NULL,
  Efeito VARCHAR(100) NULL,
  Material_Cod INTEGER NOT NULL,
  PRIMARY KEY (Material_Cod),
  CONSTRAINT fk_Material_Medicamento_Material1
    FOREIGN KEY (Material_Cod)
    REFERENCES Material (Cod)
    
    )
;


-- -----------------------------------------------------
-- Table Func_Prof_Saude_Enfermeiro
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS Func_Prof_Saude_Enfermeiro (
  Licenca INTEGER NULL,
  Func_Prof_Saude_Funcionario_id INTEGER NOT NULL,
  PRIMARY KEY (Func_Prof_Saude_Funcionario_id),
  CONSTRAINT fk_Func_Prof_Saude_Enfermeiro_Func_Prof_Saude1
    FOREIGN KEY (Func_Prof_Saude_Funcionario_id)
    REFERENCES Func_Prof_Saude (Funcionario_id)
    
    )
;


-- -----------------------------------------------------
-- Table Func_Prof_Saude_Medico
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS Func_Prof_Saude_Medico (
  CRM INTEGER NULL,
  Especialidade VARCHAR(100) NULL,
  Func_Prof_Saude_Funcionario_id INTEGER NOT NULL,
  PRIMARY KEY (Func_Prof_Saude_Funcionario_id),
  CONSTRAINT fk_Func_Prof_Saude_Medico_Func_Prof_Saude1
    FOREIGN KEY (Func_Prof_Saude_Funcionario_id)
    REFERENCES Func_Prof_Saude (Funcionario_id)
    
    )
;


-- -----------------------------------------------------
-- Table Triagem
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS Triagem (
  Seq INTEGER NOT NULL,
  Prontuario VARCHAR(100) NULL,
  Temperatura INTEGER NULL,
  Func_Prof_Saude_Enfermeiro_Func_Prof_Saude_Funcionario_id INTEGER NOT NULL,
  Paciente_id INTEGER NOT NULL,
  Paciente_Func_Atendente_Funcionario_id INTEGER NOT NULL,
  PRIMARY KEY (Seq, Func_Prof_Saude_Enfermeiro_Func_Prof_Saude_Funcionario_id, Paciente_id, Paciente_Func_Atendente_Funcionario_id),
  CONSTRAINT fk_Triagem_Func_Prof_Saude_Enfermeiro1
    FOREIGN KEY (Func_Prof_Saude_Enfermeiro_Func_Prof_Saude_Funcionario_id)
    REFERENCES Func_Prof_Saude_Enfermeiro (Func_Prof_Saude_Funcionario_id)
    
    ,
  CONSTRAINT fk_Triagem_Paciente1
    FOREIGN KEY (Paciente_id , Paciente_Func_Atendente_Funcionario_id)
    REFERENCES Paciente (id , Func_Atendente_Funcionario_id)
    
    )
;

CREATE INDEX fk_Triagem_Func_Prof_Saude_Enfermeiro1_idx ON Triagem (Func_Prof_Saude_Enfermeiro_Func_Prof_Saude_Funcionario_id ASC) ;

CREATE INDEX fk_Triagem_Paciente1_idx ON Triagem (Paciente_id ASC, Paciente_Func_Atendente_Funcionario_id ASC) ;


-- -----------------------------------------------------
-- Table Exame_has_Diagnostico
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS Exame_has_Diagnostico (
  Exame_id INTEGER NOT NULL,
  Diagnostico_Cid INTEGER NOT NULL,
  PRIMARY KEY (Exame_id, Diagnostico_Cid),
  CONSTRAINT fk_Exame_has_Diagnostico_Exame1
    FOREIGN KEY (Exame_id)
    REFERENCES Exame (id)
    
    ,
  CONSTRAINT fk_Exame_has_Diagnostico_Diagnostico1
    FOREIGN KEY (Diagnostico_Cid)
    REFERENCES Diagnostico (Cid)
    
    )
;

CREATE INDEX fk_Exame_has_Diagnostico_Diagnostico1_idx ON Exame_has_Diagnostico (Diagnostico_Cid ASC) ;

CREATE INDEX fk_Exame_has_Diagnostico_Exame1_idx ON Exame_has_Diagnostico (Exame_id ASC) ;


-- -----------------------------------------------------
-- Table Atendimento_has_Func_Prof_Saude_Enfermeiro
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS Atendimento_has_Func_Prof_Saude_Enfermeiro (
  Atendimento_Seq INTEGER NOT NULL,
  Atendimento_Paciente_id INTEGER NOT NULL,
  Func_Prof_Saude_Enfermeiro_Func_Prof_Saude_Funcionario_id INTEGER NOT NULL,
  PRIMARY KEY (Atendimento_Seq, Atendimento_Paciente_id, Func_Prof_Saude_Enfermeiro_Func_Prof_Saude_Funcionario_id),
  CONSTRAINT fk_Atendimento_has_Func_Prof_Saude_Enfermeiro_Atendimento1
    FOREIGN KEY (Atendimento_Seq , Atendimento_Paciente_id)
    REFERENCES Atendimento (Seq , Paciente_id)
    
    ,
  CONSTRAINT fk_Atendimento_has_Func_Prof_Saude_Enfermeiro_Func_Prof_Saude1
    FOREIGN KEY (Func_Prof_Saude_Enfermeiro_Func_Prof_Saude_Funcionario_id)
    REFERENCES Func_Prof_Saude_Enfermeiro (Func_Prof_Saude_Funcionario_id)
    
    )
;

CREATE INDEX fk_Atendimento_has_Func_Prof_Saude_Enfermeiro_Func_Prof_Sau_idx ON Atendimento_has_Func_Prof_Saude_Enfermeiro (Func_Prof_Saude_Enfermeiro_Func_Prof_Saude_Funcionario_id ASC) ;

CREATE INDEX fk_Atendimento_has_Func_Prof_Saude_Enfermeiro_Atendimento1_idx ON Atendimento_has_Func_Prof_Saude_Enfermeiro (Atendimento_Seq ASC, Atendimento_Paciente_id ASC) ;


-- -----------------------------------------------------
-- Table Receita_has_Material_Medicamento
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS Receita_has_Material_Medicamento (
  Receita_Seq_rec INTEGER NOT NULL,
  Receita_Paciente_id INTEGER NOT NULL,
  Receita_Paciente_Func_Atendente_Funcionario_id INTEGER NOT NULL,
  Material_Medicamento_Material_Cod INTEGER NOT NULL,
  PRIMARY KEY (Receita_Seq_rec, Receita_Paciente_id, Receita_Paciente_Func_Atendente_Funcionario_id, Material_Medicamento_Material_Cod),
  CONSTRAINT fk_Receita_has_Material_Medicamento_Receita1
    FOREIGN KEY (Receita_Seq_rec , Receita_Paciente_id)
    REFERENCES Receita (Seq_rec , Paciente_id)
    
    ,
  CONSTRAINT fk_Receita_has_Material_Medicamento_Material_Medicamento1
    FOREIGN KEY (Material_Medicamento_Material_Cod)
    REFERENCES Material_Medicamento (Material_Cod)
    
    )
;

CREATE INDEX fk_Receita_has_Material_Medicamento_Material_Medicamento1_idx ON Receita_has_Material_Medicamento (Material_Medicamento_Material_Cod ASC) ;

CREATE INDEX fk_Receita_has_Material_Medicamento_Receita1_idx ON Receita_has_Material_Medicamento (Receita_Seq_rec ASC, Receita_Paciente_id ASC, Receita_Paciente_Func_Atendente_Funcionario_id ASC) ;


-- -----------------------------------------------------
-- Table Receita_has_Func_Prof_Saude_Medico
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS Receita_has_Func_Prof_Saude_Medico (
  Receita_Seq_rec INTEGER NOT NULL,
  Receita_Paciente_id INTEGER NOT NULL,
  Func_Prof_Saude_Medico_Func_Prof_Saude_Funcionario_id INTEGER NOT NULL,
  PRIMARY KEY (Receita_Seq_rec, Receita_Paciente_id, Func_Prof_Saude_Medico_Func_Prof_Saude_Funcionario_id),
  CONSTRAINT fk_Receita_has_Func_Prof_Saude_Medico_Receita1
    FOREIGN KEY (Receita_Seq_rec , Receita_Paciente_id)
    REFERENCES Receita (Seq_rec , Paciente_id)
    
    ,
  CONSTRAINT fk_Receita_has_Func_Prof_Saude_Medico_Func_Prof_Saude_Medico1
    FOREIGN KEY (Func_Prof_Saude_Medico_Func_Prof_Saude_Funcionario_id)
    REFERENCES Func_Prof_Saude_Medico (Func_Prof_Saude_Funcionario_id)
    
    )
;

CREATE INDEX fk_Receita_has_Func_Prof_Saude_Medico_Func_Prof_Saude_Medic_idx ON Receita_has_Func_Prof_Saude_Medico (Func_Prof_Saude_Medico_Func_Prof_Saude_Funcionario_id ASC) ;

CREATE INDEX fk_Receita_has_Func_Prof_Saude_Medico_Receita1_idx ON Receita_has_Func_Prof_Saude_Medico (Receita_Seq_rec ASC, Receita_Paciente_id ASC) ;
